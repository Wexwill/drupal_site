<?php

use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;
use Drupal\views\Views;

/**
 * @file
 * Contains an_custom_commerce.module.
 */

function an_custom_commerce_views_query_alter(ViewExecutable $view, QueryPluginBase $query)
{
  if ($view->id() == 'content') {
    $user = \Drupal::currentUser();
    if ($user->hasPermission('bypass content access control')) {
      return;
    }
    /** @var \Drupal\permissions_by_term\Service\AccessStorage $access_storage */
    $access_storage = \Drupal::service('permissions_by_term.access_storage');
    $permitted_tids = $access_storage->getPermittedTids($user->id(),  $user->getRoles());
    $tids = array_values($permitted_tids);

    if (empty($tids)) {
      $tids = [0]; //this array results an empty list.
    }


    $configuration = [
      'type'       => 'LEFT OUTER',
      'table'      => 'taxonomy_index',
      'field'      => 'nid',
      'left_table' => 'node_field_data',
      'left_field' => 'nid',
      'operator'   => '=',
    ];

    $join = Views::pluginManager('join')->createInstance('standard', $configuration);
    $rel = $query->addRelationship('taxonomy_idx', $join, 'node_field_data');
    $query->addTable('taxonomy_index', $rel, $join, 'taxonomy_idx');
    $query->setWhereGroup('OR', 0);
    $query->addWhere(0, 'taxonomy_idx.tid', $tids, 'IN');
    $query->addWhere(0, 'taxonomy_idx.tid', NULL, 'IS NULL');
  }
}
